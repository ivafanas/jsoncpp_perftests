#!/usr/bin/env bash

TEST_SLTBENCH=true
TEST_GOOGLEBENCH=true
TEST_NONIUS=true

# environment
C_COMPILER=clang
CXX_COMPILER=clang++

# jsoncpp_preftests root directory
ROOT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# tools directory
TOOLS_DIR=${ROOT_DIR}/tools

# jsoncpp_preftests build directory
BUILD_DIR=${ROOT_DIR}/_build

# jsoncpp_preftests install directory
INSTALL_DIR=${ROOT_DIR}/_install

# directories set for sltbench
SLTBENCH_ROOT_DIR=${ROOT_DIR}/sltbench
SLTBENCH_BUILD_DIR=${BUILD_DIR}/sltbench/build
SLTBENCH_INSTALL_DIR=${BUILD_DIR}/sltbench/install

# directories set for googlebench
GOOGLEBENCH_ROOT_DIR=${ROOT_DIR}/googlebench
GOOGLEBENCH_BUILD_DIR=${BUILD_DIR}/googlebench/build
GOOGLEBENCH_INSTALL_DIR=${BUILD_DIR}/googlebench/install

# directories set for nonius
NONIUS_ROOT_DIR=${ROOT_DIR}/nonius

# directories set for jsoncpp
JSONCPP_ROOT_DIR=${ROOT_DIR}/jsoncpp
JSONCPP_BUILD_DIR=${BUILD_DIR}/jsoncpp/build
JSONCPP_INSTALL_DIR=${BUILD_DIR}/jsoncpp/install

# make clean build directory
rm -rf ${BUILD_DIR} && mkdir -p ${BUILD_DIR}

# install sltbench
if [ "${TEST_SLTBENCH}" == true ]
then
	mkdir -p ${SLTBENCH_BUILD_DIR}
	mkdir -p ${SLTBENCH_INSTALL_DIR}
	cd ${SLTBENCH_BUILD_DIR}
	cmake ${SLTBENCH_ROOT_DIR} \
		-DCMAKE_INSTALL_PREFIX=${SLTBENCH_INSTALL_DIR} \
		-DCMAKE_C_COMPILER=${C_COMPILER} \
		-DCMAKE_CXX_COMPILER=${CXX_COMPILER} \
		-DCMAKE_BUILD_TYPE=Release
	cmake --build ${SLTBENCH_BUILD_DIR} --target install
fi

# install googlebench
if [ "${TEST_GOOGLEBENCH}" == true ]
then
	mkdir -p ${GOOGLEBENCH_BUILD_DIR}
	mkdir -p ${GOOGLEBENCH_INSTALL_DIR}
	cd ${GOOGLEBENCH_BUILD_DIR}
	cmake ${GOOGLEBENCH_ROOT_DIR} \
		-DCMAKE_INSTALL_PREFIX=${GOOGLEBENCH_INSTALL_DIR} \
		-DCMAKE_C_COMPILER=${C_COMPILER} \
		-DCMAKE_CXX_COMPILER=${CXX_COMPILER} \
		-DCMAKE_BUILD_TYPE=Release \
		-DBENCHMARK_ENABLE_TESTING=NO
	cmake --build ${GOOGLEBENCH_BUILD_DIR} --target install
fi

# install jsoncpp
mkdir -p ${JSONCPP_BUILD_DIR}
cd ${JSONCPP_BUILD_DIR}
cmake ${JSONCPP_ROOT_DIR} \
	-DBUILD_STATIC_LIBS=ON \
	-DBUILD_SHARED_LIBS=OFF \
	-DCMAKE_INSTALL_PREFIX=${JSONCPP_INSTALL_DIR} \
	-G "Unix Makefiles" \
	-DJSONCPP_WITH_TESTS=OFF \
	-DJSONCPP_WITH_POST_BUILD_UNITTEST=OFF \
	-DCMAKE_C_COMPILER=${C_COMPILER} \
	-DCMAKE_CXX_COMPILER=${CXX_COMPILER} \
	-DCMAKE_BUILD_TYPE=Release
cmake --build ${JSONCPP_BUILD_DIR} --target install

# build tests
BUILD_TESTS_OPTIONS=""
BUILD_TESTS_OPTIONS="${BUILD_TESTS_OPTIONS} -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}"
BUILD_TESTS_OPTIONS="${BUILD_TESTS_OPTIONS} -DCMAKE_C_COMPILER=${C_COMPILER}"
BUILD_TESTS_OPTIONS="${BUILD_TESTS_OPTIONS} -DCMAKE_CXX_COMPILER=${CXX_COMPILER}"
BUILD_TESTS_OPTIONS="${BUILD_TESTS_OPTIONS} -DCMAKE_BUILD_TYPE=Relase"
if [ "${TEST_SLTBENCH}" == true ]
then
	BUILD_TESTS_OPTIONS="${BUILD_TESTS_OPTIONS} -DJPT_SLTBENCH_INSTALL_DIR=${SLTBENCH_INSTALL_DIR}"
fi
if [ "${TEST_GOOGLEBENCH}" == true ]
then
	BUILD_TESTS_OPTIONS="${BUILD_TESTS_OPTIONS} -DJPT_GOOGLEBENCH_INSTALL_DIR=${GOOGLEBENCH_INSTALL_DIR}"
fi
if [ "${TEST_NONIUS}" == true ]
then
	BUILD_TESTS_OPTIONS="${BUILD_TESTS_OPTIONS} -DJPT_NONIUS_INSTALL_DIR=${NONIUS_ROOT_DIR}"
fi
BUILD_TESTS_OPTIONS="${BUILD_TESTS_OPTIONS} -DJPT_JSONCPP_INSTALL_DIR=${JSONCPP_INSTALL_DIR}"
BUILD_TESTS_OPTIONS="${BUILD_TESTS_OPTIONS} -DJPT_BUILD_DIR=${BUILD_DIR}"

cd ${BUILD_DIR}
cmake ${ROOT_DIR} ${BUILD_TESTS_OPTIONS}
cmake --build ${BUILD_DIR}

# run compare tool
cp ${TOOLS_DIR}/aux/_compare.sh "${BUILD_DIR}"
${BUILD_DIR}/_compare.sh
